#include <iostream>

namespace Task_3
{

class A
{
public:
	//Конструкторы считаются конструкторами преобразования по умолчанию, что означает,
	//что компилятор будет использовать их для неявной конвертации объектов других
	//типов данных в объекты вашего класса.
	//Вы можете избежать этого, используя ключевое слово explicit.
	explicit A() { }
	~A()
	{
//		throw 1;//Abort вылетает здесь даже на первом throw
	}
};

class B
{
public:
	explicit B()
	{
		throw 1;
	}
	~B()
	{
		std::cout << "destructor B" << std::endl;
	}
};

int Main()
{
	try
	{
		A a;

		throw 10;//стек разматывается обратно после первого throw и вызываются все деструкторы
		//два необработанных throw подряд приводят к вылетанию программы
	}
	catch (int value)
	{
		std::cout << value << std::endl;
	}

	////////////////////////////////////////////////////////////////////
	try
	{
		B a;
	}
	catch (int value)
	{
		std::cout << value << std::endl;
	}
	////////////////////////////////////////////////////////////////////

	return 0;
}

}